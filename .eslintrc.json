{
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "./tsconfig.json",
    "sourceType": "module"
  },
  "plugins": [
    "@typescript-eslint/eslint-plugin",
    "simple-import-sort",
    "import"
  ],
  "extends": [
    "eslint:all",
    "plugin:@typescript-eslint/recommended",
    "plugin:typescript-sort-keys/recommended",
    "prettier"
  ],
  "root": true,
  "env": {
    "node": true,
    "jest": true
  },
  "ignorePatterns": [".eslintrc.js"],
  "rules": {
    // disabled rules (required)
    "no-magic-numbers": "off", // This will wrongly detect a number passed to a function as a magic number
    "new-cap": "off", // The decorators will be wrongly detected
    "class-methods-use-this": "off", // some methods are not using this

    // disabled rules (optional, in personal preference)
    "no-console": "off", // This will disable console.log, console.error, etc. This could be removed if we have our own logger
    "one-var": "off", // in favor to not merge variables to one
    "no-continue": "off", // in favor to use continue

    // modified rules
    "func-style": ["error", "declaration", { "allowArrowFunctions": true }],

    // replaced rules
    "no-useless-constructor": "off",
    "@typescript-eslint/no-useless-constructor": "error",

    "no-shadow": "off",
    "@typescript-eslint/no-shadow": "error",

    "sort-imports": "off",
    "simple-import-sort/imports": "error",
    "simple-import-sort/exports": "error",
    "import/first": "error",
    "import/newline-after-import": "error",
    "import/no-duplicates": "error",

    // additional rules
    "@typescript-eslint/consistent-type-exports": "error",
    "@typescript-eslint/consistent-type-imports": [
      "error",
      {
        "fixStyle": "inline-type-imports"
      }
    ],

    "padding-line-between-statements": [
      "error",
      { "blankLine": "always", "prev": "*", "next": "return" },
      {
        "blankLine": "always",
        "prev": ["const", "let", "var", "multiline-expression"],
        "next": "*"
      },
      {
        "blankLine": "any",
        "prev": ["const", "let", "var"],
        "next": ["const", "let", "var"]
      }
    ],
    "@typescript-eslint/interface-name-prefix": "off",
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/no-unused-vars": "error"
  },
  "overrides": [
    {
      "files": ["*.spec.ts", "*.e2e-spec.ts"],
      "rules": {
        "init-declarations": "off",
        "max-lines-per-function": "off"
      }
    }
  ]
}
